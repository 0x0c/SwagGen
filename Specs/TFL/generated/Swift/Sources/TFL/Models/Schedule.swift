//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Schedule: Codable {

    public var firstJourney: KnownJourney?

    public var knownJourneys: [KnownJourney]?

    public var lastJourney: KnownJourney?

    public var name: String?

    public var periods: [Period]?

    public init(firstJourney: KnownJourney? = nil, knownJourneys: [KnownJourney]? = nil, lastJourney: KnownJourney? = nil, name: String? = nil, periods: [Period]? = nil) {
        self.firstJourney = firstJourney
        self.knownJourneys = knownJourneys
        self.lastJourney = lastJourney
        self.name = name
        self.periods = periods
    }

    private enum CodingKeys: String, CodingKey {
        case firstJourney
        case knownJourneys
        case lastJourney
        case name
        case periods
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        firstJourney = try container.decodeIfPresent(.firstJourney)
        knownJourneys = try container.decodeIfPresent(.knownJourneys)
        lastJourney = try container.decodeIfPresent(.lastJourney)
        name = try container.decodeIfPresent(.name)
        periods = try container.decodeIfPresent(.periods)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(firstJourney, forKey: .firstJourney)
        try container.encode(knownJourneys, forKey: .knownJourneys)
        try container.encode(lastJourney, forKey: .lastJourney)
        try container.encode(name, forKey: .name)
        try container.encode(periods, forKey: .periods)
    }
}
