//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Bay: Codable {

    public var bayCount: Int?

    public var bayType: String?

    public var free: Int?

    public var occupied: Int?

    public init(bayCount: Int? = nil, bayType: String? = nil, free: Int? = nil, occupied: Int? = nil) {
        self.bayCount = bayCount
        self.bayType = bayType
        self.free = free
        self.occupied = occupied
    }

    private enum CodingKeys: String, CodingKey {
        case bayCount
        case bayType
        case free
        case occupied
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        bayCount = try container.decodeIfPresent(.bayCount)
        bayType = try container.decodeIfPresent(.bayType)
        free = try container.decodeIfPresent(.free)
        occupied = try container.decodeIfPresent(.occupied)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(bayCount, forKey: .bayCount)
        try container.encode(bayType, forKey: .bayType)
        try container.encode(free, forKey: .free)
        try container.encode(occupied, forKey: .occupied)
    }
}
