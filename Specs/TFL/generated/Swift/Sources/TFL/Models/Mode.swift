//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Mode: Codable {

    public var isFarePaying: Bool?

    public var isScheduledService: Bool?

    public var isTflService: Bool?

    public var modeName: String?

    public init(isFarePaying: Bool? = nil, isScheduledService: Bool? = nil, isTflService: Bool? = nil, modeName: String? = nil) {
        self.isFarePaying = isFarePaying
        self.isScheduledService = isScheduledService
        self.isTflService = isTflService
        self.modeName = modeName
    }

    private enum CodingKeys: String, CodingKey {
        case isFarePaying
        case isScheduledService
        case isTflService
        case modeName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        isFarePaying = try container.decodeIfPresent(.isFarePaying)
        isScheduledService = try container.decodeIfPresent(.isScheduledService)
        isTflService = try container.decodeIfPresent(.isTflService)
        modeName = try container.decodeIfPresent(.modeName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(isFarePaying, forKey: .isFarePaying)
        try container.encode(isScheduledService, forKey: .isScheduledService)
        try container.encode(isTflService, forKey: .isTflService)
        try container.encode(modeName, forKey: .modeName)
    }
}
