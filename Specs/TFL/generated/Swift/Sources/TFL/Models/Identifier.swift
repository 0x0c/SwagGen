//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Identifier: Codable {

    public var crowding: Crowding?

    public var fullName: String?

    public var id: String?

    public var name: String?

    public var type: String?

    public var uri: String?

    public init(crowding: Crowding? = nil, fullName: String? = nil, id: String? = nil, name: String? = nil, type: String? = nil, uri: String? = nil) {
        self.crowding = crowding
        self.fullName = fullName
        self.id = id
        self.name = name
        self.type = type
        self.uri = uri
    }

    private enum CodingKeys: String, CodingKey {
        case crowding
        case fullName
        case id
        case name
        case type
        case uri
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        crowding = try container.decodeIfPresent(.crowding)
        fullName = try container.decodeIfPresent(.fullName)
        id = try container.decodeIfPresent(.id)
        name = try container.decodeIfPresent(.name)
        type = try container.decodeIfPresent(.type)
        uri = try container.decodeIfPresent(.uri)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(crowding, forKey: .crowding)
        try container.encode(fullName, forKey: .fullName)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(type, forKey: .type)
        try container.encode(uri, forKey: .uri)
    }
}
