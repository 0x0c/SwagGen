//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Redirect: Codable {

    public var active: Bool?

    public var longUrl: String?

    public var shortUrl: String?

    public init(active: Bool? = nil, longUrl: String? = nil, shortUrl: String? = nil) {
        self.active = active
        self.longUrl = longUrl
        self.shortUrl = shortUrl
    }

    private enum CodingKeys: String, CodingKey {
        case active
        case longUrl
        case shortUrl
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        active = try container.decodeIfPresent(.active)
        longUrl = try container.decodeIfPresent(.longUrl)
        shortUrl = try container.decodeIfPresent(.shortUrl)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(active, forKey: .active)
        try container.encode(longUrl, forKey: .longUrl)
        try container.encode(shortUrl, forKey: .shortUrl)
    }
}
