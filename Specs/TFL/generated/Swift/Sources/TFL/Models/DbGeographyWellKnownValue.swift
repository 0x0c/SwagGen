//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DbGeographyWellKnownValue: Codable {

    public var coordinateSystemId: Int?

    public var wellKnownBinary: String?

    public var wellKnownText: String?

    public init(coordinateSystemId: Int? = nil, wellKnownBinary: String? = nil, wellKnownText: String? = nil) {
        self.coordinateSystemId = coordinateSystemId
        self.wellKnownBinary = wellKnownBinary
        self.wellKnownText = wellKnownText
    }

    private enum CodingKeys: String, CodingKey {
        case coordinateSystemId
        case wellKnownBinary
        case wellKnownText
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        coordinateSystemId = try container.decodeIfPresent(.coordinateSystemId)
        wellKnownBinary = try container.decodeIfPresent(.wellKnownBinary)
        wellKnownText = try container.decodeIfPresent(.wellKnownText)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(coordinateSystemId, forKey: .coordinateSystemId)
        try container.encode(wellKnownBinary, forKey: .wellKnownBinary)
        try container.encode(wellKnownText, forKey: .wellKnownText)
    }
}
