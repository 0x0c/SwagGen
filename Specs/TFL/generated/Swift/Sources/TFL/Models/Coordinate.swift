//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Coordinate: Codable {

    public var easting: Double?

    public var latitude: Double?

    public var longitude: Double?

    public var northing: Double?

    public var xCoord: Int?

    public var yCoord: Int?

    public init(easting: Double? = nil, latitude: Double? = nil, longitude: Double? = nil, northing: Double? = nil, xCoord: Int? = nil, yCoord: Int? = nil) {
        self.easting = easting
        self.latitude = latitude
        self.longitude = longitude
        self.northing = northing
        self.xCoord = xCoord
        self.yCoord = yCoord
    }

    private enum CodingKeys: String, CodingKey {
        case easting
        case latitude
        case longitude
        case northing
        case xCoord
        case yCoord
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        easting = try container.decodeIfPresent(.easting)
        latitude = try container.decodeIfPresent(.latitude)
        longitude = try container.decodeIfPresent(.longitude)
        northing = try container.decodeIfPresent(.northing)
        xCoord = try container.decodeIfPresent(.xCoord)
        yCoord = try container.decodeIfPresent(.yCoord)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(easting, forKey: .easting)
        try container.encode(latitude, forKey: .latitude)
        try container.encode(longitude, forKey: .longitude)
        try container.encode(northing, forKey: .northing)
        try container.encode(xCoord, forKey: .xCoord)
        try container.encode(yCoord, forKey: .yCoord)
    }
}
