//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class JourneyVector: Codable {

    public var from: String?

    public var to: String?

    public var uri: String?

    public var via: String?

    public init(from: String? = nil, to: String? = nil, uri: String? = nil, via: String? = nil) {
        self.from = from
        self.to = to
        self.uri = uri
        self.via = via
    }

    private enum CodingKeys: String, CodingKey {
        case from
        case to
        case uri
        case via
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        from = try container.decodeIfPresent(.from)
        to = try container.decodeIfPresent(.to)
        uri = try container.decodeIfPresent(.uri)
        via = try container.decodeIfPresent(.via)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(from, forKey: .from)
        try container.encode(to, forKey: .to)
        try container.encode(uri, forKey: .uri)
        try container.encode(via, forKey: .via)
    }
}
