//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Obstacle: Codable {

    public var incline: String?

    public var position: String?

    public var stopId: Int?

    public var type: String?

    public init(incline: String? = nil, position: String? = nil, stopId: Int? = nil, type: String? = nil) {
        self.incline = incline
        self.position = position
        self.stopId = stopId
        self.type = type
    }

    private enum CodingKeys: String, CodingKey {
        case incline
        case position
        case stopId
        case type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        incline = try container.decodeIfPresent(.incline)
        position = try container.decodeIfPresent(.position)
        stopId = try container.decodeIfPresent(.stopId)
        type = try container.decodeIfPresent(.type)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(incline, forKey: .incline)
        try container.encode(position, forKey: .position)
        try container.encode(stopId, forKey: .stopId)
        try container.encode(type, forKey: .type)
    }
}
