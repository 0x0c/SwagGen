//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class User: Codable {

    public var email: String?

    public var firstName: String?

    public var id: Int?

    public var lastName: String?

    public var password: String?

    public var phone: String?

    /** User Status */
    public var userStatus: Int?

    public var username: String?

    public init(email: String? = nil, firstName: String? = nil, id: Int? = nil, lastName: String? = nil, password: String? = nil, phone: String? = nil, userStatus: Int? = nil, username: String? = nil) {
        self.email = email
        self.firstName = firstName
        self.id = id
        self.lastName = lastName
        self.password = password
        self.phone = phone
        self.userStatus = userStatus
        self.username = username
    }

    private enum CodingKeys: String, CodingKey {
        case email
        case firstName
        case id
        case lastName
        case password
        case phone
        case userStatus
        case username
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        email = try container.decodeIfPresent(.email)
        firstName = try container.decodeIfPresent(.firstName)
        id = try container.decodeIfPresent(.id)
        lastName = try container.decodeIfPresent(.lastName)
        password = try container.decodeIfPresent(.password)
        phone = try container.decodeIfPresent(.phone)
        userStatus = try container.decodeIfPresent(.userStatus)
        username = try container.decodeIfPresent(.username)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(email, forKey: .email)
        try container.encode(firstName, forKey: .firstName)
        try container.encode(id, forKey: .id)
        try container.encode(lastName, forKey: .lastName)
        try container.encode(password, forKey: .password)
        try container.encode(phone, forKey: .phone)
        try container.encode(userStatus, forKey: .userStatus)
        try container.encode(username, forKey: .username)
    }
}
