//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AppConfigGeneral: Codable {

    /** The currency code to target. */
    public var currencyCode: String?

    /** A map of custom configuration fields. */
    public var customFields: [String: Any]?

    /** A Google Analytics token to track applicaton user events. */
    public var gaToken: String?

    /** A map of default item image types where the key is the item types. */
    public var itemImageTypes: [String: String]?

    /** The public Stripe key to use for payment transactions. */
    public var stripeKey: String?

    /** The url of the primary website. */
    public var websiteUrl: URL?

    public init(currencyCode: String? = nil, customFields: [String: Any]? = nil, gaToken: String? = nil, itemImageTypes: [String: String]? = nil, stripeKey: String? = nil, websiteUrl: URL? = nil) {
        self.currencyCode = currencyCode
        self.customFields = customFields
        self.gaToken = gaToken
        self.itemImageTypes = itemImageTypes
        self.stripeKey = stripeKey
        self.websiteUrl = websiteUrl
    }

    private enum CodingKeys: String, CodingKey {
        case currencyCode
        case customFields
        case gaToken
        case itemImageTypes
        case stripeKey
        case websiteUrl
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        currencyCode = try container.decodeIfPresent(.currencyCode)
        customFields = try container.decodeAnyIfPresent(.customFields)
        gaToken = try container.decodeIfPresent(.gaToken)
        itemImageTypes = try container.decodeIfPresent(.itemImageTypes)
        stripeKey = try container.decodeIfPresent(.stripeKey)
        websiteUrl = try container.decodeIfPresent(.websiteUrl)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(currencyCode, forKey: .currencyCode)
        try container.encodeAny(customFields, forKey: .customFields)
        try container.encode(gaToken, forKey: .gaToken)
        try container.encode(itemImageTypes, forKey: .itemImageTypes)
        try container.encode(stripeKey, forKey: .stripeKey)
        try container.encode(websiteUrl, forKey: .websiteUrl)
    }
}
