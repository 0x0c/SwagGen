//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

extension TestSpec {

    public enum GetUntagged {

      public static let service = APIService<Response>(id: "getUntagged", tag: "", method: "GET", path: "/untagged", hasBody: false)

      public class Request: APIRequest<Response> {

          public init() {
              super.init(service: GetUntagged.service)
          }
        }

        public enum Response: APIResponseValue, CustomStringConvertible, CustomDebugStringConvertible {
            public typealias SuccessType = Void

            /** Empty response */
            case success201

            public var success: Void? {
                switch self {
                case .success201(let response): return response
                }
            }

            public var response: Any {
                switch self {
                default: return ()
                }
            }

            public var statusCode: Int {
              switch self {
              case .success201: return 201
              }
            }

            public var successful: Bool {
              switch self {
              case .success201: return true
              }
            }

            public init(statusCode: Int, data: Data) throws {
                switch statusCode {
                case 201: self = .success201
                default: throw APIError.unexpectedStatusCode(statusCode: statusCode, data: data)
                }
            }

            public var description: String {
                return "\(statusCode) \(successful ? "success" : "failure")"
            }

            public var debugDescription: String {
                var string = description
                let responseString = "\(response)"
                if responseString != "()" {
                    string += "\n\(responseString)"
                }
                return string
            }
        }
    }
}
