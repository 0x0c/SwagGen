//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DeviceObject: Codable, Equatable {

    public var token: String

    /** When this device was created */
    public var createdAt: Date

    public var type: [String: Any]

    public var customer: [String: Any]

    public var description: String?

    public init(token: String, createdAt: Date, type: [String: Any], customer: [String: Any], description: String? = nil) {
        self.token = token
        self.createdAt = createdAt
        self.type = type
        self.customer = customer
        self.description = description
    }

    private enum CodingKeys: String, CodingKey {
        case token
        case createdAt
        case type
        case customer
        case description
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        token = try container.decode(.token)
        createdAt = try container.decode(.createdAt)
        type = try container.decodeAny(.type)
        customer = try container.decodeAny(.customer)
        description = try container.decodeIfPresent(.description)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(token, forKey: .token)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeAny(type, forKey: .type)
        try container.encodeAny(customer, forKey: .customer)
        try container.encode(description, forKey: .description)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceObject else { return false }
      guard self.token == object.token else { return false }
      guard self.createdAt == object.createdAt else { return false }
      guard NSDictionary(dictionary: self.type ).isEqual(to: object.type) else { return false }
      guard NSDictionary(dictionary: self.customer ).isEqual(to: object.customer) else { return false }
      guard self.description == object.description else { return false }
      return true
    }

    public static func == (lhs: DeviceObject, rhs: DeviceObject) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
